<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	<title>Webkey for Android</title>
MENU
<script type="text/javascript" language="javascript">

	var preload = new Image();
	preload.src = "down.png";
	preload.src = "up.png";
	preload.src = "left.png";
	preload.src = "right.png";
	preload.src = "center.png";


   var http_request = false;
   var KMhttp_request = false;
   var pressed = false;
   var moveevent;
   var wait = false;
   var Mqueue = false;
   var Kqueue = false;
   var firsttype = true;
   var refrid = 0;
 //  var forcerefrid = 0;
   var keyq = '';
   var lasturl = '';
   var lasturlcount = 0;
   var diffprogress = 0;
   var ignore_backspace = 0;
   function makeRequest(url, parameters) {
      http_request = false;
      if (window.XMLHttpRequest) { // Mozilla, Safari,...
         http_request = new XMLHttpRequest();
         if (http_request.overrideMimeType) {
            http_request.overrideMimeType('text/xml');
         }
      } else if (window.ActiveXObject) { // IE
         try {
            http_request = new ActiveXObject("Msxml2.XMLHTTP");
         } catch (e) {
            try {
               http_request = new ActiveXObject("Microsoft.XMLHTTP");
            } catch (e) {}
         }
      }
      if (!http_request) {
         alert('Cannot create XMLHTTP instance');
         return false;
      }
      http_request.onreadystatechange = alertContents;
      http_request.open('GET', url + parameters, true);
	document.getElementById('ind').className = 'yellow';
      http_request.send(null);
   }
   function KMmakeRequest(url, parameters) {
      KMhttp_request = false;
      if (window.XMLHttpRequest) { // Mozilla, Safari,...
         KMhttp_request = new XMLHttpRequest();
         if (KMhttp_request.overrideMimeType) {
            KMhttp_request.overrideMimeType('text/xml');
         }
      } else if (window.ActiveXObject) { // IE
         try {
            KMhttp_request = new ActiveXObject("Msxml2.XMLHTTP");
         } catch (e) {
            try {
               KMhttp_request = new ActiveXObject("Microsoft.XMLHTTP");
            } catch (e) {}
         }
      }
      if (!KMhttp_request) {
         alert('Cannot create XMLHTTP instance');
         return false;
      }
      KMhttp_request.onreadystatechange = KMalertContents;
      lasturl = url + parameters;
      lasturlcount = 10;
      KMhttp_request.open('GET', url + parameters, true);
	document.getElementById('ind').className = 'yellow';
      KMhttp_request.send(null);
   }
   function statusmakeRequest(url, parameters) {
      statushttp_request = false;
      if (window.XMLHttpRequest) { // Mozilla, Safari,...
         statushttp_request = new XMLHttpRequest();
         if (statushttp_request.overrideMimeType) {
            statushttp_request.overrideMimeType('text/xml');
         }
      } else if (window.ActiveXObject) { // IE
         try {
            statushttp_request = new ActiveXObject("Msxml2.XMLHTTP");
         } catch (e) {
            try {
               statushttp_request = new ActiveXObject("Microsoft.XMLHTTP");
            } catch (e) {}
         }
      }
      if (!statushttp_request) {
         alert('Cannot create XMLHTTP instance');
         return false;
      }
      statushttp_request.onreadystatechange = statusalertContents;
      statushttp_request.open('GET', url + parameters, true);
      statushttp_request.send(null);
   }
   function diffmakeRequest(url, parameters) {
      diffhttp_request = false;
      if (window.XMLHttpRequest) { // Mozilla, Safari,...
         diffhttp_request = new XMLHttpRequest();
         if (diffhttp_request.overrideMimeType) {
            diffhttp_request.overrideMimeType('text/xml');
         }
      } else if (window.ActiveXObject) { // IE
         try {
            diffhttp_request = new ActiveXObject("Msxml2.XMLHTTP");
         } catch (e) {
            try {
               diffhttp_request = new ActiveXObject("Microsoft.XMLHTTP");
            } catch (e) {}
         }
      }
      if (!diffhttp_request) {
         alert('Cannot create XMLHTTP instance');
         return false;
      }
      diffhttp_request.onreadystatechange = diffalertContents;
      diffhttp_request.open('GET', url + parameters, true);
      diffhttp_request.send(null);
   }

   function alertContents() {
	   try{
	      if (http_request.responseText != '')
		      document.getElementById('res').innerHTML = '<pre>' + http_request.responseText.replace(/\n/g,'<br/>') + '</pre>';
	   } catch (e) {};
      if (http_request.readyState == 4) {
         if (http_request.status == 200) {
		document.getElementById('ind').className = 'green';
         }
	 else
	 {
		 document.getElementById('ind').className = 'red';
	 }
      }
   }
   function KMalertContents() {
      if (KMhttp_request.readyState == 4) {
         if (KMhttp_request.status == 200) {
		document.getElementById('ind').className = 'green';

		wait = false;
		if (Kqueue)
		{
			keyLater();
		}
		else
		{
			if (Mqueue)
			{
				moveLater();
			}
		}
         }
	 else
	 {
		 document.getElementById('ind').className = 'red';
		 if (lasturlcount == 0)
		 {
			wait = false;
			if (Kqueue)
			{
				keyLater();
			}
			else
			{
				if (Mqueue)
				{
					moveLater();
				}
			}
		 }
		 else
		 {
			 var l = lasturlcount-1;
			 KMmakeRequest(lasturl,'');
			 lasturlcount = l;
		 }
	 }
      }
   }
   function statusalertContents() {
      if (statushttp_request.readyState == 4) {
         if (statushttp_request.status == 200) {
	      if (statushttp_request.responseText != '')
		      document.getElementById('status').innerHTML = statushttp_request.responseText;
         }
	 setTimeout("refreshstatus()",10000);
      }
   }
   function diffalertContents() {
      if (diffhttp_request.readyState == 4) {
	      diffprogress = 0;
		if (document.myform.auto.checked==true)
		      refreshImage();
      }
   }
function mytimer()
{
	if (document.myform.kalive.checked==true)
		keepAlive();
	setTimeout("mytimer()",14000);
}
setTimeout("mytimer()",1500);
function sendkey(e) {
	var evtobj=window.event? event : e; //distinguish between IE's explicit event object (window.event) and Firefox's implicit.
	var unicode=evtobj.charCode? evtobj.charCode : -evtobj.keyCode;
	if (unicode == 8)
		unicode = -8;
	if (unicode == -8 && ignore_backspace > 0)
		ignore_backspace -= 1;
	else
		submitkey(unicode);
}
function submitkey(unicode)
{
	var t = 'key';
	if (document.myform.old.checked==true)
		t = 'oldkey';
	if (document.myform.orient.checked==true)
		t = t+'h';
	else
		t = t+'v';
	if (document.myform.sms.checked==true)
		t = t+'s';
	else
		t = t+'n';
	if (wait == false)
	{
		KMmakeRequest(t+'_'+unicode,'');
		wait = true;
		keyq = t;
	}
	else
	{
		if (Kqueue == true)
			keyq = keyq + '_' + unicode;		
		else
			keyq = t+'_'+unicode;
		Kqueue = true;
	}
}
function keyLater()
{
	KMmakeRequest(keyq,'');
	keyq = '';
	Kqueue = false;
	wait = true;
}
function refreshstatus()
{
	statusmakeRequest('status','');
}
function refreshImage()
{
	var now = new Date();
	var or = document.myform.orient.checked?'h':'v';
	var lowr = document.myform.lowres.checked?'l':'n';
	var f = document.myform.first.checked?'f':'n';
	document.images['screenshot'].src = 'screenshot.png?'+or+lowr+f+now.getTime();
	setWidth(document.myform.orient.checked?1:0,document.myform.halfsize.checked?1:0);
	if (diffprogress == 0 && document.myform.auto.checked==true)
	{
		diffprogress = 1;
		setTimeout("diffmakeRequest('waitdiff','')",100);
	}
}
function coord(event)
{
	var top = 0;
	var left = 0;
	var ob = document.images['screenshot'];
	do{
		left += ob.offsetLeft;
		top += ob.offsetTop;
		ob = ob.offsetParent;
	}while (ob);
	pos_x = event.offsetX?(event.offsetX):event.pageX-left;
	pos_y = event.offsetY?(event.offsetY):event.pageY-top;
	if (document.myform.halfsize.checked==true)
	{
		pos_x = pos_x*2;
		pos_y = pos_y*2;
	}
	if (document.myform.orient.checked==true)
		return 'h'+pos_x+'_'+pos_y;
	else
		return 'v'+pos_x+'_'+pos_y;
}
function down(e)
{
	var ev=window.event? event : e //distinguish between IE's explicit event object (window.event) and Firefox's implicit.
	if(ev.preventDefault)
		ev.preventDefault();
//	pos_x = event.offsetX?(event.offsetX):event.pageX-document.images.screenshot.offsetLeft;
//	pos_y = event.offsetY?(event.offsetY):event.pageY-document.images.screenshot.offsetTop;
	makeRequest('touch_'+coord(ev)+'_1','');
	pressed = true;
}
function up(e)
{
	var ev=window.event? event : e //distinguish between IE's explicit event object (window.event) and Firefox's implicit.
	if(ev.preventDefault)
		ev.preventDefault();
	makeRequest('touch_'+coord(ev)+'_0','');
	pressed = false;
}
function move(e)
{
	var ev=window.event? event : e //distinguish between IE's explicit event object (window.event) and Firefox's implicit.
	if(ev.preventDefault)
		ev.preventDefault();
	if (pressed)
	{
		if (wait == false)
		{
			moveevent = coord(ev);
			moveLater();
		}
		else
		{
			moveevent = coord(ev);
			Mqueue = true;
		}
	}
}
function moveLater()
{
	if (pressed)
	{
		Mqueue = false;
		wait = true;
		KMmakeRequest('touch_'+moveevent+'_2','');
	}
}
function keepAlive()
{
	makeRequest('button_28',''); //send CLEAR to keep alive
}
function isBackspace(e)
{
	var evtobj=window.event? event : e //distinguish between IE's explicit event object (window.event) and Firefox's implicit.
	if (evtobj.keyCode == 8)
	{
//		makeRequest('button_67','');//DEL
		ignore_backspace += 1;
		submitkey(-8);
		return false;
	}
//	if (evtobj.keyCode == 13)
//	{
//		makeRequest('button_66','');//ENTER
//	}
}
function intent(act,dat)
{
	var addr = 'intent';
	var st='-a '+act+' -d '+dat;
	var l=st.length;
	var i = 0;
	for (i = 0; i < l; i++)
		addr += '_'+st.charCodeAt(i);
	makeRequest(addr,'');
}
function runline(st)
{
	var addr = 'run';
	var l=st.length;
	var i = 0;
	for (i = 0; i < l; i++)
		addr += '_'+st.charCodeAt(i);
	makeRequest(addr,'');
}
function cleartext()
{
	if (firsttype && document.getElementById('text').value == "Click here to type on phone!")
	{
		document.getElementById('text').value = "" ;
	}
	firsttype = false;
}
function call(number)
{
	var st = 'service call phone 2 s16 "'+number+'"';
	var addr = 'run';
	var l=st.length;
	var i = 0;
	for (i = 0; i < l; i++)
		addr += '_'+st.charCodeAt(i);
	makeRequest(addr,'');
}
function resend()
{
	var st = document.getElementById('text').value;
	var l = st.length;
	var i = 0;
	var t = 'key';
	if (document.myform.orient.checked==true)
		t = t+'h';
	else
		t = t+'v';
	if (document.myform.sms.checked==true)
		t = t+'s';
	else
		t = t+'n';
	for (i = 0; i < l; i++)
		t = t + '_'+st.charCodeAt(i);
	makeRequest(t,'');
}
function checklowres()
{
	if (document.myform.halfsize.checked)
		document.myform.lowres.checked = true;
	refreshImage();
}
function arrows_move(event)
{
	var top = 0;
	var left = 0;
	var ob = document.images['arrows'];
	do{
		left += ob.offsetLeft;
		top += ob.offsetTop;
		ob = ob.offsetParent;
	}while (ob);
	var x = event.offsetX?(event.offsetX):event.pageX-left;
	var y = event.offsetY?(event.offsetY):event.pageY-top;
	if (x < 12 && x < y && x < 36-y)
	{
		document.images['arrows'].src = 'left.png';
		return;
	}
	if (y < 12 && y < 36-x)
	{
		document.images['arrows'].src = 'up.png';
		return;
	}
	if (x > 23  && y < x)
	{
		document.images['arrows'].src = 'right.png';
		return;
	}
	if (y > 23)
	{
		document.images['arrows'].src = 'down.png';
		return;
	}
	document.images['arrows'].src = 'center.png';
}
function arrows_down(event)
{
	var top = 0;
	var left = 0;
	var ob = document.images['arrows'];
	do{
		left += ob.offsetLeft;
		top += ob.offsetTop;
		ob = ob.offsetParent;
	}while (ob);
	var x = event.offsetX?(event.offsetX):event.pageX-left;
	var y = event.offsetY?(event.offsetY):event.pageY-top;
	if (x < 12 && x < y && x < 36-y)
	{
		if (document.myform.orient.checked==true)
			makeRequest('button_19','');
		else
			makeRequest('button_21','');
		return;
	}
	if (y < 12 && y < 36-x)
	{
		if (document.myform.orient.checked==true)
			makeRequest('button_22','');
		else
			makeRequest('button_19','');
		return;
	}
	if (x > 23  && y < x)
	{
		if (document.myform.orient.checked==true)
			makeRequest('button_20','');
		else
			makeRequest('button_22','');
		return;
	}
	if (y > 23)
	{
		if (document.myform.orient.checked==true)
			makeRequest('button_21','');
		else
			makeRequest('button_20','');
		return;
	}
	makeRequest('button_23','');
}
function arrows_out()
{
	document.images['arrows'].src = 'arrows.png';
}
// from w3schools.com
function setCookie(c_name,value,expiredays)
{
var exdate=new Date();
exdate.setDate(exdate.getDate()+expiredays);
document.cookie=c_name+ "=" +escape(value)+
((expiredays==null) ? "" : ";expires="+exdate.toUTCString());
}
function getCookie(c_name)
{
if (document.cookie.length>0)
  {
  c_start=document.cookie.indexOf(c_name + "=");
  if (c_start!=-1)
    {
    c_start=c_start + c_name.length+1;
    c_end=document.cookie.indexOf(";",c_start);
    if (c_end==-1) c_end=document.cookie.length;
    return unescape(document.cookie.substring(c_start,c_end));
    }
  }
return "";
}
//document.myform.lowres.checked = getCookie("lowres");
refreshstatus();
function updatecookies()
{
	setCookie("lowres",document.myform.lowres.checked?'true':'false',30);
	setCookie("halfsize",document.myform.halfsize.checked?'true':'false',30);
	setCookie("orient",document.myform.orient.checked?'true':'false',30);
	setCookie("sms",document.myform.sms.checked?'true':'false',30);
	setCookie("old",document.myform.old.checked?'true':'false',30);
	setCookie("auto",document.myform.auto.checked?'true':'false',30);
	setCookie("kalive",document.myform.kalive.checked?'true':'false',30);
	setCookie("first",document.myform.first.checked?'true':'false',30);
//	setCookie("force",document.myform.force.checked?'true':'false',30);
//	setCookie("forcems",document.myform.forcems.value,30);
}
//function forcereload(id)
//{
//	if (id == forcerefrid && document.myform.force.checked == true)
//	{
//		refreshImage();
//		setTimeout("forcereload("+id+")",document.myform.forcems.value);
//	}
//}
//function forcerefresh()
//{
//	if (document.myform.force.checked && document.myform.forcems.value < 400)
//		document.myform.forcems.value = 400;
//	forcerefrid++;
//	if (document.myform.force.checked)
//		setTimeout("forcereload("+forcerefrid+")",document.myform.forcems.value);
//}
function autorefresh()
{
	if (document.myform.auto.checked==true)
		refreshImage()
}
</script>


<div class="main">
<div id="ind" class='green'>&nbsp;</div>
<span id="status" class='stat'></span><br/>
<img class="kep" src="" name="screenshot" align="left" onmousedown="down(event)" onmouseup="up(event)" onmouseover="move(event)" onmouseout="if (pressed) up(event);" ondragstart="return false"/>
<form name="myform">
<div class="rightmenu">
<span style="font-variant: small-caps; ">Webkey WEBVERSION</span><br/>
<input type="checkbox" name="lowres" onclick="updatecookies()" >Low resolution</input>
<input type="checkbox" name="halfsize" onclick="checklowres();updatecookies()">Half size</input><br/>
<input type="checkbox" name="orient" onclick="refreshImage();updatecookies()">Horizontal</input>
<input type="checkbox" name="sms" onclick="updatecookies()">SMS mode</input><br/>
<input type="checkbox" name="old" onclick="updatecookies()">Old/Opera/IE browser compatibility</input><br/>
<input type="checkbox" name="auto" onclick="updatecookies();autorefresh()">Auto refresh</input>
<input type="checkbox" name="kalive" onclick="keepAlive();updatecookies()">Keep alive</input><br/>
<input type="checkbox" name="first" onclick="updatecookies()">Use only first framebuffer</input><br/>
<img src="arrows.png" name="arrows" onmousedown="arrows_down(event)" onmousemove="arrows_move(event)" onmouseout="arrows_out()" ondragstart="return false" style="vertical-align:middle">&nbsp;
<input type="button" class="butt" value="Refresh image" onclick="refreshImage()"/><br/>
<input name="configbuttons" type="button" class="butt" value="Config buttons" onclick="window.location = 'config_buttons.html'">
<input name="configkeys" type="button" class="butt" value="Config keys" onclick="window.location = 'config_keys.html'"><br/>
<input type="text" name="uri" value="http://" rows="1" onkeydown="if (event.keyCode==13) {document.myform.urisend.click(); return false;}"><input name="urisend" type="button" class="butt" value="Open in browser" onclick=intent('android.intent.action.VIEW',document.myform.uri.value)><br/>
<input type="text" name="dial" value="" rows="1" onkeydown="if (event.keyCode==13) {document.myform.callsend.click(); return false;}"><input name="callsend" type="button" class="butt" value="Call" onclick=call(document.myform.dial.value)>
<input name="dialsend" type="button" class="butt" value="Dial" onclick=intent('android.intent.action.DIAL','tel:'+document.myform.dial.value)><br/>
<input type="text" name="run" value="ls -l -a" rows="1" onkeydown="if (event.keyCode==13) {document.myform.runsend.click(); return false;}"><input name="runsend" type="button" class="butt" value="Run" onclick=runline(document.myform.run.value)><br/>
<input name="resendbutton" type="button" class="butt" value="Resend text below" onclick="resend()"><br/>
</div>

<script type="text/javascript" language="javascript">
	if (getCookie("lowres") == "true")
		document.myform.lowres.checked = true;
	if (getCookie("halfsize") == "true")
		document.myform.halfsize.checked = true;
	if (getCookie("orient") == "true")
		document.myform.orient.checked = true;
	if (getCookie("sms") == "true")
		document.myform.sms.checked = true;
	if (getCookie("old") == "true")
		document.myform.old.checked = true;
	if (getCookie("first") == "true")
		document.myform.first.checked = true;
	if (getCookie("auto") == "true")
	{
		document.myform.auto.checked = true;
		setTimeout("refreshImage()",200);
	}
	if (getCookie("kalive") == "true")
		document.myform.kalive.checked = true;
	if (getCookie("auto")=="")
	{
		document.myform.auto.checked = true;
		setTimeout("refreshImage()",200);
	}
	if (getCookie("kalive")=="")
		document.myform.kalive.checked = true;
//	if (getCookie("forcems")!="")
//		document.myform.forcems.value = getCookie("forcems");
//	else
//		document.myform.forcems.value = getCookie("1000");
//	if (getCookie("force")=="true")
//	{
//		document.myform.force.checked = true;
//		forcerefresh();
//	}
</script>
	
<div>
<textarea id="text" value="Click here to type on phone!" cols="115" rows="4"
	onkeypress="sendkey(event)" onkeydown="isBackspace(event)" onfocus="cleartext()">Click here to type on phone!</textarea>
</div>
</form>
<div>
